{"ast":null,"code":"var _jsxFileName = \"/home/mahidhar/Desktop/ReactApp/reels/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { storage } from \"./firebase\";\nimport { ref, listAll, getDownloadURL } from \"firebase/storage\";\nimport Upload from \"./Upload\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [videos, setVideos] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [currentVideoIndex, setCurrentVideoIndex] = useState(0);\n  const videoRef = ref(storage, \"images\");\n  useEffect(() => {\n    const fetchVideos = async () => {\n      try {\n        const response = await listAll(videoRef);\n        const urls = await Promise.all(response.items.map(item => getDownloadURL(item)));\n        setVideos(urls);\n      } catch (error) {\n        console.error(\"Error fetching videos:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchVideos();\n  }, [videoRef]);\n  const handleNextVideo = () => {\n    setCurrentVideoIndex(prevIndex => (prevIndex + 1) % videos.length);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App container\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header my-4\",\n      children: [/*#__PURE__*/_jsxDEV(Upload, {\n        setVideos: setVideos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading videos...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-container\",\n        children: videos.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"video\", {\n            src: videos[currentVideoIndex],\n            controls: true,\n            className: \"mb-2\",\n            width: \"500\"\n          }, currentVideoIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-secondary\",\n            onClick: handleNextVideo,\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No videos available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"1Kj9DDv6GQk/JwPN+LPpBIK2G2Q=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","storage","ref","listAll","getDownloadURL","Upload","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","videos","setVideos","loading","setLoading","currentVideoIndex","setCurrentVideoIndex","videoRef","fetchVideos","response","urls","Promise","all","items","map","item","error","console","handleNextVideo","prevIndex","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","controls","width","onClick","_c","$RefreshReg$"],"sources":["/home/mahidhar/Desktop/ReactApp/reels/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { storage } from \"./firebase\";\nimport { ref, listAll, getDownloadURL } from \"firebase/storage\";\nimport Upload from \"./Upload\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nfunction App() {\n  const [videos, setVideos] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [currentVideoIndex, setCurrentVideoIndex] = useState(0);\n\n  const videoRef = ref(storage, \"images\");\n\n  useEffect(() => {\n    const fetchVideos = async () => {\n      try {\n        const response = await listAll(videoRef);\n        const urls = await Promise.all(\n          response.items.map(item => getDownloadURL(item))\n        );\n        setVideos(urls);\n      } catch (error) {\n        console.error(\"Error fetching videos:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchVideos();\n  }, [videoRef]);\n\n  const handleNextVideo = () => {\n    setCurrentVideoIndex((prevIndex) => (prevIndex + 1) % videos.length);\n  };\n\n  return (\n    <div className=\"App container\">\n      <header className=\"App-header my-4\">\n        <Upload setVideos={setVideos} />\n        {loading ? (\n          <p>Loading videos...</p>\n        ) : (\n          <div className=\"video-container\">\n            {videos.length > 0 ? (\n              <>\n                <video\n                  key={currentVideoIndex}\n                  src={videos[currentVideoIndex]}\n                  controls\n                  className=\"mb-2\"\n                  width=\"500\"\n                />\n                <button className=\"btn btn-secondary\" onClick={handleNextVideo}>\n                  Next\n                </button>\n              </>\n            ) : (\n              <p>No videos available</p>\n            )}\n          </div>\n        )}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}